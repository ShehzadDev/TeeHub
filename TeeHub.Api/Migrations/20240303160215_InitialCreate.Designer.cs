// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeeHub.Api.Data;

#nullable disable

namespace TeeHub.Api.Migrations
{
    [DbContext(typeof(TeeHubDBContext))]
    [Migration("20240303160215_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Cart", b =>
                {
                    b.Property<Guid>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DesignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartID");

                    b.HasIndex("DesignId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Design", b =>
                {
                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DesignColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesignID")
                        .HasColumnType("int");

                    b.Property<string>("DesignSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Designs");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Feedback", b =>
                {
                    b.Property<Guid>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StarsCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeedbackID");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Order", b =>
                {
                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderID");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.OrderDetail", b =>
                {
                    b.Property<Guid>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DesignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("DesignId");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.OrderStatusHistory", b =>
                {
                    b.Property<Guid>("StatusChangeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ChangedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusChangeID");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderStatusHistories");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Cart", b =>
                {
                    b.HasOne("TeeHub.Api.Models.Domain.Design", "Design")
                        .WithMany()
                        .HasForeignKey("DesignId");

                    b.HasOne("TeeHub.Api.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Design");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Design", b =>
                {
                    b.HasOne("TeeHub.Api.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Feedback", b =>
                {
                    b.HasOne("TeeHub.Api.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.Order", b =>
                {
                    b.HasOne("TeeHub.Api.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.OrderDetail", b =>
                {
                    b.HasOne("TeeHub.Api.Models.Domain.Design", "Design")
                        .WithMany()
                        .HasForeignKey("DesignId");

                    b.HasOne("TeeHub.Api.Models.Domain.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");

                    b.Navigation("Design");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TeeHub.Api.Models.Domain.OrderStatusHistory", b =>
                {
                    b.HasOne("TeeHub.Api.Models.Domain.User", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("TeeHub.Api.Models.Domain.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedByUser");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
